pipeline {
    agent {label 'aws'}

    stages {
        stage('preparation') {
            steps {
            git 'https://github.com/radwanabil/Booster_CI_CD_Project.git'
            }

        }
        
        
         stage('docker build') {
              steps {
                  withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                sh """
                docker build . -f dockerfile -t radwa98/sprints_jenkins_django:latest
                docker login -u ${USERNAME} -p ${PASSWORD}
                docker push radwa98/sprints_jenkins_django:latest
                """

            }
          stage('docker push') {
              steps {
                  withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                sh """
                docker push radwa98/sprints_jenkins_django:latest
                """

            }
            stage('docker deploy') {
              steps {
            

            }
            stage('docker notification') {
              steps {
            
                success {
                  slackSend (color: '#00ffcc', message: "pipeline succeded")
                }
                failure {
                  slackSend (color: '#cc3300', message: "pipeline failed")
                }
            }
        }
    }
}
}
